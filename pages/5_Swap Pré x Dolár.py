import streamlit as st
import pandas as pd
import numpy as np
from io import BytesIO

# T√≠tulo e explica√ß√£o breve

st.set_page_config(page_title="Swap Pr√© x D√≥lar: Hedge de Exporta√ß√£o", layout="wide")
st.title("Swap Pr√© x D√≥lar: Hedge de Exporta√ß√£o")

st.write("""
O swap pr√© x d√≥lar √© um instrumento de hedge utilizado por exportadores para reduzir a exposi√ß√£o √† volatilidade cambial. 
Nesta opera√ß√£o, o exportador troca a varia√ß√£o do d√≥lar por um fluxo de caixa previs√≠vel em reais. 
O swap √© contratado com uma institui√ß√£o financeira, onde o exportador paga a varia√ß√£o cambial e recebe uma taxa pr√©-fixada em reais.
""")

# Entrada do usu√°rio
valor_exportacao = st.number_input("üí∞ Digite o valor da exporta√ß√£o em d√≥lares (US$)", min_value=0.0, format="%.2f")
taxa_cambio_inicial = st.number_input("üí± Digite a taxa de c√¢mbio inicial (D0)", min_value=0.0, format="%.4f")
taxa_cambio_final = st.number_input("üìä Digite a taxa de c√¢mbio final (DT)", min_value=0.0, format="%.4f")
taxa_pre_anual = st.number_input("üìà Digite a taxa pr√©-fixada anual (%)", min_value=0.0, format="%.2f")
prazo_dias = st.number_input("üìÜ Digite o prazo do swap (dias √∫teis)", min_value=1, format="%d")

# Bot√£o para calcular
if st.button("üöÄ Calcular"):
    # C√°lculo do Nocional
    if valor_exportacao > 0 and taxa_cambio_inicial > 0:
        nocional = valor_exportacao * taxa_cambio_inicial
        st.write(f"‚úÖ **Valor nocional do contrato:** R$ {nocional:,.2f}")

        # C√°lculo do Valor Atualizado na ponta D√≥lar
        valor_atualizado_dolar = valor_exportacao * taxa_cambio_final
        st.write(f"üí≤ **Valor atualizado da ponta D√≥lar:** R$ {valor_atualizado_dolar:,.2f}")

        # C√°lculo do Valor Atualizado na ponta Pr√©-fixada
        taxa_pre_decimal = taxa_pre_anual / 100
        fator_prazo = (1 + taxa_pre_decimal) ** (prazo_dias / 252)
        valor_atualizado_pre = nocional * fator_prazo
        st.write(f"üìà **Valor atualizado da ponta Pr√©-fixada:** R$ {valor_atualizado_pre:,.2f}")

        # C√°lculo do Resultado do Exportador
        resultado_exportador = valor_atualizado_pre - valor_atualizado_dolar
        st.subheader("üìä Resultado da Opera√ß√£o")

        if resultado_exportador > 0:
            st.success(f"‚úÖ O exportador teve um **ganho** de R$ {resultado_exportador:,.2f} no swap.")
            interpretacao = "O hedge foi bem-sucedido e protegeu a receita do exportador da desvaloriza√ß√£o cambial."
        else:
            st.error(f"‚ö†Ô∏è O exportador teve uma **perda** de R$ {abs(resultado_exportador):,.2f} no swap.")
            interpretacao = "O hedge resultou em uma perda devido √† valoriza√ß√£o inesperada do d√≥lar."

        # Explica√ß√£o final
        st.write("üîç **Interpreta√ß√£o do resultado:**")
        st.write(interpretacao)

        st.write("""
        O resultado do swap mostra a diferen√ßa entre o valor atualizado da ponta pr√©-fixada e a ponta cambial.  
        Se o resultado for positivo, significa que o exportador conseguiu fixar um valor mais alto em reais.  
        Se for negativo, significa que teria sido melhor manter a exposi√ß√£o cambial.
        """)

        # Criar DataFrame para exporta√ß√£o
        df_resultado = pd.DataFrame({
            "Par√¢metro": ["Valor da Exporta√ß√£o (US$)", "Taxa de C√¢mbio Inicial (D0)", "Taxa de C√¢mbio Final (DT)",
                          "Taxa Pr√©-Fixada (%)", "Prazo do Swap (dias √∫teis)", "Nocional (R$)",
                          "Valor Atualizado D√≥lar (R$)", "Valor Atualizado Pr√©-Fixado (R$)",
                          "Resultado do Exportador (R$)"],
            "Valor": [valor_exportacao, taxa_cambio_inicial, taxa_cambio_final, taxa_pre_anual, prazo_dias, nocional,
                      valor_atualizado_dolar, valor_atualizado_pre, resultado_exportador]
        })

        output = BytesIO()
        with pd.ExcelWriter(output, engine="xlsxwriter") as writer:
            df_resultado.to_excel(writer, index=False, sheet_name="Resultado_Swap")
            writer.close()

        excel_data = output.getvalue()

        st.download_button(label="üì• Baixar resultado em Excel",
                           data=excel_data,
                           file_name="resultado_swap.xlsx",
                           mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")


# Contato
st.markdown("""
Entre em contato comigo:  
üìß **E-mail:** william.paiva@outlook.com  
üì± **WhatsApp:** +55 11 98576-0234  
üîó **LinkedIn:** [William Paiva](https://www.linkedin.com/in/william-paiva-fin/)  
""")

# Bot√£o para redirecionar para o LinkedIn
st.markdown("""
<a href="https://www.linkedin.com/in/william-paiva-fin/" target="_blank">
    <button style="background-color: #0A66C2; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer;">
        Conectar no LinkedIn
    </button>
</a>
""", unsafe_allow_html=True)
